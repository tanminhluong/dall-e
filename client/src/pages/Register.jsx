import React, { useState } from "react";
import { useForm } from "react-hook-form";
import { useNavigate, Link } from "react-router-dom";
import { registerUser } from "../redux/userActions";
import axios from "axios";
import { useDispatch, useSelector } from "react-redux";
import { Toast } from "flowbite-react";
import { HiExclamation } from "react-icons/hi";

const Register = () => {
  const form = useForm();
  const { register, handleSubmit, formState } = form;
  const { errors } = formState;

  const { error } = useSelector((state) => state.user);

  const navigate = useNavigate();
  const dispatch = useDispatch();
  const [loading, setLoading] = useState(false);

  const handleRegister = async (formData, e) => {
    e.preventDefault();
    setLoading(true);

    if (formData) {
      dispatch(registerUser(formData));
      navigate("/auth/login");
    } else {
      return alert("please enter all the fields");
    }
  };
  return (
    <section className="max-w-xl mx-auto px-4">
      <div>
        <h1 className="font-extrabold text-[32px] text-[#222328]">Sign up</h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          To create and share fabulous images that generated by Dall-E AI!
        </p>
        <form onSubmit={handleSubmit(handleRegister)} className="mt-10 ">
          <div className="flex flex-col gap-2">
            <div className="flex flex-col  gap-2 mb-2">
              <label
                htmlFor={"username"}
                className="block text-sm font-medium text-gray-900 "
              >
                Username:
              </label>
              <input
                type="text"
                {...register("username", {
                  required: {
                    value: true,
                    message: "Please enter Username",
                  },
                })}
                className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-[#4649ff] focus:border-[#4649ff] outline-none block w-full p-3"
              />
              <p className="mt-2 text-red-700 text-sm ">
                {errors.username?.message}
              </p>
            </div>

            <div className="flex flex-col  gap-2 mb-2">
              <label
                htmlFor={"email"}
                className="block text-sm font-medium text-gray-900 "
              >
                Email:
              </label>
              <input
                type="text"
                {...register("email", {
                  pattern: {
                    value: /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/,
                    message: "Invalid email format",
                  },
                })}
                className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-[#4649ff] focus:border-[#4649ff] outline-none block w-full p-3"
              />
              <p className="mt-2 text-red-700 text-sm ">
                {errors.email?.message}
              </p>
            </div>

            <div className="flex flex-col  gap-2 mb-2">
              <label
                htmlFor={"profileName"}
                className="block text-sm font-medium text-gray-900 "
              >
                Profile Name:
              </label>
              <input
                type="text"
                {...register("profileName", {
                  required: {
                    value: true,
                    message: "Please enter your profile name",
                  },
                })}
                className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-[#4649ff] focus:border-[#4649ff] outline-none block w-full p-3"
              />
              <p className="mt-2 text-red-700 text-sm ">
                {errors.profileName?.message}
              </p>
            </div>

            <div className="flex flex-col  gap-2 mb-2">
              <label
                htmlFor={"password"}
                className="block text-sm font-medium text-gray-900 "
              >
                Password:
              </label>
              <input
                type="password"
                {...register("password", {
                  required: {
                    value: true,
                    message: "Please enter password",
                  },
                })}
                className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-[#4649ff] focus:border-[#4649ff] outline-none block w-full p-2"
              />
              <p className="mt-2 text-red-700 text-sm ">
                {errors.password?.message}
              </p>
            </div>

            <div className="flex flex-col  gap-2 mb-2">
              <label
                htmlFor={"confirmPassword"}
                className="block text-sm font-medium text-gray-900 "
              >
                Confirm Password:
              </label>
              <input
                type="password"
                {...register("confirmPassword", {
                  required: {
                    value: true,
                    message: "Please re-enter your password",
                  },
                })}
                className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-[#4649ff] focus:border-[#4649ff] outline-none block w-full p-3"
              />
              <p className="mt-2 text-red-700 text-sm ">
                {errors.confirmPassword?.message}
              </p>
            </div>

            <div className="mt-5 flex justify-center gap-5">
              <button
                type="submit"
                className="text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center  "
              >
                Sign Up
              </button>
            </div>
          </div>
        </form>

        <p className="mx-auto mt-12 text-center text-[#666e75] text-[16px] max-w-[500px]">
          Have an account yet ?{" "}
          <Link to="/auth/login" className="text-[#6161f3] underline ">
            Sign in
          </Link>{" "}
          here
        </p>
      </div>
      {error && (
        <Toast className="mx-auto mt-10">
          <div className="inline-flex h-8 w-8 shrink-0 items-center justify-center rounded-lg bg-orange-100 text-orange-500 dark:bg-orange-700 dark:text-orange-200">
            <HiExclamation className="h-5 w-5" />
          </div>
          <div className="ml-3 text-medium text-red-700 font-bold">
            {error}.
          </div>
          <Toast.Toggle />
        </Toast>
      )}
    </section>
  );
};

export default Register;
