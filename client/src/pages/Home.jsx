import React, { useEffect } from "react";
import { useState } from "react";
import { Loader, FormField, Card, Header } from "../components";
import { Link, useNavigate } from "react-router-dom";
import { AiFillPlusCircle } from "react-icons/ai";
import { Tooltip } from "flowbite-react";
import { useDispatch, useSelector } from "react-redux";
import { getAllPosts } from "../redux/postActions";
import { getAllUsers } from "../redux/userActions";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0)
    return data.map((post) => <Card key={post._id} type={"card"} {...post} />);
  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  const { posts, status, loading } = useSelector((state) => state.post);
  const { userInfo } = useSelector((state) => state.user);
  const navigate = useNavigate();
  const dispatch = useDispatch();

  useEffect(() => {
    console.log("useEffect call");
    dispatch(getAllPosts());
    dispatch(getAllUsers());
  }, [dispatch]);

  const handleSearchChange = (e) => {
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = posts?.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );

        setSearchedResults(searchResults);
      }, 500)
    );
  };

  const handleCreatePostClick = (e) => {
    if (userInfo) {
      navigate("/create-post");
    } else {
      navigate("/auth/login");
    }
  };

  return (
    <>
      <Header />

      <main className="sm:px-8 px-4 py-8 w-full bg-[#f9fafe] min-h-[calc(100vh-75px)]">
        <section className="max-w-7xl mx-auto">
          <div>
            <h1 className="font-extrabold text-[32px] text-[#222328]">
              The Community Showcase
            </h1>
            <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
              Browse through a collection of imaginitive and visually stunning
              images generated by DALL-E AI
            </p>
          </div>

          <div className="mt-16">
            <FormField
              labelName="Search posts"
              type="text"
              placeholder="Search posts"
              name="text"
              value={searchText}
              handleChange={handleSearchChange}
            />
          </div>

          <div className="mt-10">
            {loading ? (
              <div className="flex justify-center items-center">
                <Loader />
              </div>
            ) : (
              <>
                {searchText && (
                  <h2 className="font-medium text-[#666e75] text-xl mb-3">
                    Showing results for{" "}
                    <span className="text-[#222328]">{searchText}</span>
                  </h2>
                )}
                <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                  {searchText ? (
                    <RenderCards
                      data={searchedResults}
                      title="No search results found"
                    />
                  ) : (
                    <RenderCards data={posts} title="No posts found" />
                  )}
                </div>
              </>
            )}
          </div>
        </section>
        <div className="fixed right-0 bottom-1 z-10 ">
          <Tooltip placement="top">
            <button type="button" onClick={handleCreatePostClick}>
              <AiFillPlusCircle className="h-16 w-20 text-[#e469ff]" />
            </button>
          </Tooltip>
        </div>
      </main>
    </>
  );
};

export default Home;
